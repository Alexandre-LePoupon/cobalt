/* helper object to communicate with native */var cobalt={userEvents:{},debug:!1,sendingToNative:!0,callbacks:{},lastCallbackId:0,init:function(e){e&&(e.sendingToNative===!1&&(this.sendingToNative=!1),e.debug===!0&&(this.debug=!0,this.createLogDiv()),e.debugAjax===!0&&(this.debugAjax=!0),e.events&&(this.userEvents=e.events)),cobalt.storage.enable(),cobalt.adapter.init&&cobalt.adapter.init(),cobalt.send({type:"cobaltIsReady"})},log:function(e,t){if(cobalt.debug){t===undefined&&(t=!0),e=cobalt.toString(e);var n=$("#cobalt_logdiv");if(n.length)try{n.append("<br/>"+cobalt.HTMLEncode(e))}catch(r){n.append("<br/><b>cobalt.log failed on something.</b>")}t&&cobalt.send({type:"log",value:e})}},createLogDiv:function(){$("#cobalt_logdiv").length==0&&($("body").append('<div id="cobalt_logdiv" style="position: absolute; top:10px; right: 10px; padding:10px; width:10px; height: 10px; border:1px solid blue; overflow: hidden; "></div>'),$("#cobalt_logdiv").on("tap",cobalt.toggleLogDiv).on("click",cobalt.toggleLogDiv))},toggleLogDiv:function(){$(this).css("width")!="250px"?$(this).css({width:"250px",height:"300px",overflow:"scroll"}):$(this).css({width:"10px",height:"10px",overflow:"hidden"})},send:function(e,t){t&&(typeof t=="function"?(e.callback=""+cobalt.lastCallbackId++,cobalt.callbacks[e.callback]=t):typeof t=="string"&&(e.callback=""+t)),cobalt.adapter.send(e,t)},sendEvent:function(e,t,n){if(e){var r={type:"event",name:e,data:t||{}};cobalt.send(r,n)}},sendCallback:function(e,t){var n=e;typeof n.callback=="string"&&n.callback.length>0&&cobalt.send({type:"callback",callback:n.callback,data:t})},navigate:function(e,t,n){switch(e){case"push":t&&cobalt.send({type:"navigation",action:"push",data:{page:t,controller:n}});break;case"pop":cobalt.send({type:"navigation",action:"pop"});break;case"modale":t&&cobalt.adapter.navigateToModale(t,n);break;case"dismiss":cobalt.adapter.dismissFromModale()}},toast:function(e){cobalt.send({type:"ui",control:"toast",data:{message:cobalt.toString(e)}})},alert:function(e,t,n,r){if(e||t){var i={type:"ui",control:"alert",data:{message:t,title:e}},s;n&&cobalt.isArray(n)&&n.length&&(i.data.buttons=n);if(r){if(typeof r.callback=="string"||typeof r.callback=="function")s=r.callback;r.cancelable&&(i.data.cancelable=!0)}if(!i.data.id||!cobalt.isNumber(i.data.id))i.data.id=0;cobalt.send(i,s)}},webLayer:function(e,t,n){switch(e){case"dismiss":cobalt.send({type:"webLayer",action:"dismiss",data:t});break;case"show":page&&cobalt.send({type:"webLayer",action:"show",data:{page:t,fadeDuration:n}})}},execute:function(e){if(e&&!e.type)try{e=JSON.parse(e)}catch(t){e={}}try{switch(e.type){case"event":cobalt.adapter.handleEvent(e);break;case"callback":cobalt.adapter.handleCallback(e);break;case"log":cobalt.log("LOG "+decodeURIComponent(e.value),e.logBack);break;default:cobalt.log("received unhandled data type : "+e.type)}}catch(t){cobalt.log("cobalt.execute failed : "+t)}},tryToCallCallback:function(callback){var callbackfunction=null;cobalt.isNumber(callback.callback)&&typeof cobalt.callbacks[callback.callback]=="function"?callbackfunction=cobalt.callbacks[callback.callback]:typeof callback.callback=="string"&&(callbackfunction=eval(callback.callback));if(typeof callbackfunction=="function")try{callbackfunction(callback.data)}catch(e){cobalt.log("Failed calling callback : "+e)}},initStorage:function(){return cobalt.localStorageEnabled||(cobalt.localStorageEnabled=cobalt.adapter.initStorage(),cobalt.localStorageEnabled||cobalt.log("LocalStorage ERROR : localStorage not available !")),cobalt.localStorageEnabled},isNumber:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},isArray:function(e){return Object.prototype.toString.call(e)==="[object Array]"},toString:function(e){if(typeof e!="string")try{e=JSON.stringify(e)}catch(t){e=""+e}return e},HTMLEncode:function(e){return $("<div/>").text(e||"").html()},HTMLDecode:function(e){return $("<div/>").html(e||"").text()},checkDependency:function(e){switch(e){case"storage":return cobalt.storage.enable()}},defaultBehaviors:{handleCallback:function(e){switch(e.callback){default:cobalt.tryToCallCallback(e)}},navigateToModale:function(e,t){cobalt.send({type:"navigation",action:"modale",data:{page:e,controller:t}})},dismissFromModale:function(){cobalt.send({type:"typeNavigation",action:"dismiss"})},initStorage:function(){return cobalt.storage.enable()}},storage:{storage:!1,enable:function(){var e,t,n;try{n=new Date,(e=window.localStorage).setItem(n,n),t=e.getItem(n)!=n,e.removeItem(n),t&&(e=!1)}catch(r){}return e?(this.storage=e,!0):!1},clear:function(){this.storage&&this.storage.clear()},getItem:function(e,t){if(this.storage){var n=this.storage.getItem(e);switch(t){case undefined:return n;case"int":return parseInt(n);case"float":return parseFloat(n);case"date":return new Date(n);case"json":return JSON.parse(n)}return n}},setItem:function(e,t,n){if(this.storage)switch(n){case undefined:return this.storage.setItem(e,""+t);case"json":return this.storage.setItem(e,JSON.stringify(t))}},removeItem:function(e){if(this.storage)return this.storage.removeItem(e)}}};cobalt.ios_adapter={pipeline:[],pipelineRunning:!1,init:function(){cobalt.platform="iOs"},handleEvent:function(e){cobalt.log("<b>received</b> : "+JSON.stringify(e),!1),cobalt.userEvents&&typeof cobalt.userEvents[e.name]=="function"&&cobalt.userEvents[e.name](e)},handleCallback:function(e){switch(e.callbackID){case"callbackSimpleAcquitment":cobalt.adapter.unpipe(),cobalt.adapter.pipeline.length==0&&(cobalt.log("set pipe running=false",!1),cobalt.adapter.pipelineRunning=!1);break;default:cobalt.tryToCallCallback(e)}},send:function(e){cobalt.log("adding to pipe",!1),cobalt.adapter.pipeline.push(e),cobalt.adapter.pipelineRunning||cobalt.adapter.unpipe()},unpipe:function(){cobalt.adapter.pipelineRunning=!0;var e=cobalt.adapter.pipeline.shift();e&&cobalt.sendingToNative&&(cobalt.log("----sending : "+JSON.stringify(e),!1),document.location.href=encodeURIComponent("h@ploid#k&y"+JSON.stringify(e)))},navigateToModale:cobalt.defaultBehaviors.navigateToModale,dismissFromModale:cobalt.defaultBehaviors.dismissFromModale,initStorage:cobalt.defaultBehaviors.initStorage},cobalt.adapter=cobalt.ios_adapter;