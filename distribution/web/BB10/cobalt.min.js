/* helper object to communicate with native */var cobalt={userEvents:{},debug:!1,sendingToNative:!0,callbacks:{},lastCallbackId:0,init:function(e){e&&(e.sendingToNative===!1&&(this.sendingToNative=!1),e.debug===!0&&(this.debug=!0,this.createLogDiv()),e.debugAjax===!0&&(this.debugAjax=!0),e.events&&(this.userEvents=e.events),e.storage===!0&&cobalt.initStorage()),cobalt.adapter.init&&cobalt.adapter.init(),cobalt.send({type:"cobaltIsReady"})},log:function(e,t){if(cobalt.debug){t===undefined&&(t=!0),e=cobalt.toString(e);var n=$("#cobalt_logdiv");if(n.length)try{n.append("<br/>"+cobalt.HTMLEncode(e))}catch(r){n.append("<br/><b>cobalt.log failed on something.</b>")}t&&cobalt.send({type:"log",value:e})}},createLogDiv:function(){$("#cobalt_logdiv").length==0&&($("body").append('<div id="cobalt_logdiv" style="position: absolute; top:10px; right: 10px; padding:10px; width:10px; height: 10px; border:1px solid blue; overflow: hidden; "></div>'),$("#cobalt_logdiv").on("tap",cobalt.toggleLogDiv).on("click",cobalt.toggleLogDiv))},toggleLogDiv:function(){$(this).css("width")!="250px"?$(this).css({width:"250px",height:"300px",overflow:"scroll"}):$(this).css({width:"10px",height:"10px",overflow:"hidden"})},send:function(e,t){t&&(typeof t=="function"?(e.callback=cobalt.lastCallbackId++,cobalt.callbacks[e.callback]=t):typeof t=="string"&&(e.callback=""+t)),cobalt.adapter.send(e,t)},sendEvent:function(e,t,n){if(e){var r={type:"event",name:e,data:t||{}};cobalt.send(r,n)}},sendCallback:function(e,t){var n=e;typeof n.callback=="string"&&n.callback.length>0&&cobalt.send({type:"callback",callback:n.callback,data:t})},navigate:function(e,t,n){switch(e){case"push":t&&cobalt.send({type:"navigation",action:"push",data:{page:t,controller:n}});break;case"pop":cobalt.send({type:"navigation",action:"pop"});break;case"modale":t&&cobalt.adapter.navigateToModale(t,n);break;case"dismiss":cobalt.adapter.dismissFromModale()}},toast:function(e){cobalt.send({type:"ui",control:"toast",data:{message:cobalt.toString(e)}})},alert:function(e,t,n,r){if(e||t){var i={type:"ui",control:"alert",data:{message:t,title:e}},s;n&&cobalt.isArray(n)&&n.length&&(i.data.buttons=n);if(r){if(typeof r.callback=="string"||typeof r.callback=="function")s=r.callback;i.data.id=parseInt(r.id),r.mandatory===!0&&(i.cancelable=!1)}if(!i.data.id||!cobalt.isNumber(i.data.id))i.data.id=0;cobalt.send(i,s)}},webLayer:function(e,t,n){switch(e){case"dismiss":cobalt.send({type:"webLayer",action:"dismiss"});break;case"show":t&&cobalt.send({type:"webLayer",action:"show",data:{page:t,fadeDuration:n}})}},execute:function(e){if(e&&!e.type)try{e=JSON.parse(e)}catch(t){e={}}try{switch(e.type){case"event":cobalt.adapter.handleEvent(e);break;case"callback":cobalt.adapter.handleCallback(e);break;case"log":cobalt.log("LOG "+decodeURIComponent(e.value),e.logBack);break;default:cobalt.log("received unhandled data type : "+e.type)}}catch(t){cobalt.log("cobalt.execute failed : "+t)}},tryToCallCallback:function(callback){var callbackfunction=null;cobalt.isNumber(callback.callback)&&typeof cobalt.callbacks[callback.callback]=="function"?callbackfunction=cobalt.callbacks[callback.callback]:typeof callback.callback=="string"&&(callbackfunction=eval(callback.callback));if(typeof callbackfunction=="function")try{callbackfunction(callback.params)}catch(e){cobalt.log("Failed calling callback #"+callback.callback+".")}},initStorage:function(){return cobalt.localStorageEnabled||(cobalt.localStorageEnabled=cobalt.adapter.initStorage(),cobalt.localStorageEnabled||cobalt.log("LocalStorage ERROR : localStorage not available !")),cobalt.localStorageEnabled},isNumber:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},isArray:function(e){return Object.prototype.toString.call(e)==="[object Array]"},toString:function(e){if(typeof e!="string")try{e=JSON.stringify(e)}catch(t){e=""+e}return e},HTMLEncode:function(e){return $("<div/>").text(e||"").html()},HTMLDecode:function(e){return $("<div/>").html(e||"").text()},checkDependency:function(e){switch(e){case"storage":if(!window.utils||!window.utils.storage)return cobalt.log("WARNING : window.utils.storage is not set. it is required for some navigate calls"),!1;return cobalt.initStorage()}},defaultBehaviors:{handleCallback:function(e){switch(e.callback){default:cobalt.tryToCallCallback(e)}},navigateToModale:function(e,t){cobalt.send({type:"navigation",action:"modale",data:{page:e,controller:t}})},dismissFromModale:function(){cobalt.send({type:"typeNavigation",action:"dismiss"})},initStorage:function(){return window.utils&&utils.storage?utils.storage.enable():(cobalt.log("WARNING : you should include utils.storage to use storage"),!1)}}};cobalt.bb10_adapter={init:function(){try{navigator.cascades.onmessage=cobalt.execute}catch(e){cobalt.log("cant bind JS to native",!1)}if(!cobalt.debugAjax){var t=window.Zepto||window.jQuery;t.ajax=function(e){cobalt.sendEvent("ajax",{options:e},function(t){if(t.success&&e.success)e.success(t.data);else if(t.error)try{e.error({status:t.status,statusText:t.statusText})}catch(n){cobalt.log("cant call ajax error callback : "+n)}})}}cobalt.platform="BB10"},handleEvent:function(e){cobalt.log("----received : "+JSON.stringify(e),!1),cobalt.userEvents&&typeof cobalt.userEvents[e.name]=="function"&&cobalt.userEvents[e.name](e)},send:function(e){if(e&&cobalt.sendingToNative){cobalt.log("----sending :"+JSON.stringify(e),!1);try{navigator.cascades.postMessage(encodeURIComponent(JSON.stringify(e)))}catch(t){cobalt.log("cant connect to native",!1)}}},handleCallback:cobalt.defaultBehaviors.handleCallback,navigateToModale:cobalt.defaultBehaviors.navigateToModale,dismissFromModale:cobalt.defaultBehaviors.dismissFromModale,initStorage:cobalt.defaultBehaviors.initStorage},cobalt.adapter=cobalt.bb10_adapter;