/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2014 Cobaltians
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var cobalt={userEvents:{},debug:!1,debugInBrowser:!1,debugInLogdiv:!1,callbacks:{},lastCallbackId:0,init:function(e){e&&(this.debug=e.debug===!0,this.debugInBrowser=e.debugInBrowser===!0,this.debugInLogdiv=e.debugInLogdiv===!0,e.events&&(this.userEvents=e.events),cobalt.debugInLogdiv&&this.createLogDiv()),cobalt.storage.enable(),cobalt.adapter.init&&cobalt.adapter.init(),cobalt.send({type:"cobaltIsReady"})},addEventListener:function(e,t){typeof e=="string"&&typeof t=="function"&&(this.userEvents[e]=t)},removeEventListener:function(e){typeof e=="string"&&this.userEvents[e]&&(this.userEvents[e]=undefined)},log:function(){var e=cobalt.argumentsToString(arguments);cobalt.debug&&(cobalt.debugInBrowser&&window.console?console.log(e):cobalt.send({type:"log",value:e}),cobalt.divLog(e))},divLog:function(){if(cobalt.debugInLogdiv){var e=$("#cobalt_logdiv");if(e.length){var t="<br/>"+cobalt.argumentsToString(arguments);try{e.append(t)}catch(n){e.append("<b>cobalt.log failed on something.</b>")}}}},argumentsToString:function(){var e=[];return $.each(arguments[0],function(t,n){e.push(cobalt.toString(n))}),e.join(" ")},createLogDiv:function(){$("#cobalt_logdiv").length==0&&($("body").append('<div id="cobalt_logdiv" style="position: absolute; top:10px; right: 10px; padding:10px; width:10px; height: 10px; border:1px solid blue; overflow: hidden; "></div>'),$("#cobalt_logdiv").on("tap",cobalt.toggleLogDiv).on("click",cobalt.toggleLogDiv))},toggleLogDiv:function(){$(this).css("width")!="250px"?$(this).css({width:"250px",height:"300px",overflow:"scroll"}):$(this).css({width:"10px",height:"10px",overflow:"hidden"})},send:function(e,t){t&&(typeof t=="function"?(e.callback=""+cobalt.lastCallbackId++,cobalt.callbacks[e.callback]=t):typeof t=="string"&&(e.callback=""+t)),cobalt.debugInBrowser&&cobalt.log("sending",e),cobalt.adapter.send(e,t)},sendEvent:function(e,t,n){if(e){var r={type:"event",event:e,data:t||{}};cobalt.send(r,n)}},sendCallback:function(e,t){typeof e=="string"&&e.length>0&&(cobalt.divLog("calling callback with callback id = ",e),cobalt.send({type:"callback",callback:e,data:t}))},navigate:function(e,t,n){switch(e){case"push":t&&cobalt.send({type:"navigation",action:"push",data:{page:t,controller:n}});break;case"pop":cobalt.send({type:"navigation",action:"pop"});break;case"modal":t&&cobalt.adapter.navigateToModal(t,n);break;case"dismiss":cobalt.adapter.dismissFromModal()}},toast:function(e){cobalt.send({type:"ui",control:"toast",data:{message:cobalt.toString(e)}})},alert:function(e,t,n,r){if(e||t){var i={type:"ui",control:"alert",data:{message:t,title:e}},s;n&&cobalt.isArray(n)&&n.length&&(i.data.buttons=n);if(r){if(typeof r.callback=="string"||typeof r.callback=="function")s=r.callback;r.cancelable&&(i.data.cancelable=!0)}if(!i.data.id||!cobalt.isNumber(i.data.id))i.data.id=0;cobalt.send(i,s)}},webLayer:function(e,t,n){switch(e){case"dismiss":cobalt.send({type:"webLayer",action:"dismiss",data:t});break;case"show":t&&cobalt.send({type:"webLayer",action:"show",data:{page:t,fadeDuration:n}})}},openExternalUrl:function(e){e&&cobalt.send({type:"intent",action:"openExternalUrl",data:{url:e}})},execute:function(e){cobalt.divLog("received",e);if(e&&!e.type)try{e=JSON.parse(e)}catch(t){e={}}try{switch(e.type){case"event":cobalt.adapter.handleEvent(e);break;case"callback":cobalt.adapter.handleCallback(e);break;default:cobalt.log("received unhandled data type : "+e.type)}}catch(t){cobalt.log("cobalt.execute failed : "+t)}},tryToCallCallback:function(callback){cobalt.divLog("trying to call web callback");var callbackfunction=null;cobalt.isNumber(callback.callback)&&typeof cobalt.callbacks[callback.callback]=="function"?callbackfunction=cobalt.callbacks[callback.callback]:typeof callback.callback=="string"&&(callbackfunction=eval(callback.callback));if(typeof callbackfunction=="function")try{callbackfunction(callback.data)}catch(e){cobalt.log("Failed calling callback : "+e)}},initStorage:function(){return cobalt.localStorageEnabled||(cobalt.localStorageEnabled=cobalt.adapter.initStorage(),cobalt.localStorageEnabled||cobalt.log("LocalStorage ERROR : localStorage not available !")),cobalt.localStorageEnabled},isNumber:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},isArray:function(e){return Object.prototype.toString.call(e)==="[object Array]"},toString:function(e){switch(typeof e){case"function":e=(""+e.call).replace("native","web");break;default:try{e=JSON.stringify(e)}catch(t){e=""+e}}return e},HTMLEncode:function(e){return $("<div/>").text(e||"").html()},HTMLDecode:function(e){return $("<div/>").html(e||"").text()},defaultBehaviors:{handleEvent:function(e){cobalt.log("received event",e.event),cobalt.userEvents&&typeof cobalt.userEvents[e.event]=="function"&&cobalt.userEvents[e.event](e.data,e.callback)},handleCallback:function(e){switch(e.callback){default:cobalt.tryToCallCallback(e)}},navigateToModal:function(e,t){cobalt.send({type:"navigation",action:"modal",data:{page:e,controller:t}})},dismissFromModal:function(){cobalt.send({type:"navigation",action:"dismiss"})},initStorage:function(){return cobalt.storage.enable()}},storage:{storage:!1,enable:function(){var e,t,n;try{n=new Date,(e=window.localStorage).setItem(n,n),t=e.getItem(n)!=n,e.removeItem(n),t&&(e=!1)}catch(r){}return e?(this.storage=e,!0):!1},clear:function(){this.storage&&this.storage.clear()},getItem:function(e,t){if(this.storage){var n=this.storage.getItem(e);if(n){switch(t){case undefined:return n;case"int":return parseInt(n);case"float":return parseFloat(n);case"date":return new Date(n);case"json":return JSON.parse(n)}return n}return undefined}},setItem:function(e,t,n){if(this.storage)switch(n){case"json":return this.storage.setItem(e,JSON.stringify(t));default:return this.storage.setItem(e,""+t)}},removeItem:function(e){if(this.storage)return this.storage.removeItem(e)}}};cobalt.tizen_adapter={init:function(){$("body").prepend('<object id="Tizen" type="application/x-tizen-jsbridge" width="0" height="0" style="position:absolute;"></object>'),cobalt.navigate=this.navigate,cobalt.defaultBehaviors.initStorage(),cobalt.platform="Tizen"},navigate:function(e,t,n){switch(e){case"push":if(t&&cobalt.checkDependency("storage")){var r=cobalt.storage.getItem("cobalt_pushNumber","int")||0;r++,cobalt.storage.setItem("cobalt_pushNumber",r),cobalt.send({type:"navigation",action:"push",data:{page:t,controller:n,pushNumber:r}})}break;case"pop":cobalt.send({type:"navigation",action:"pop"});break;case"modal":t&&cobalt.adapter.navigateToModal(t,n);break;case"dismiss":cobalt.adapter.dismissFromModal()}},handleEvent:function(e){cobalt.log("received event",e.event);if(cobalt.userEvents&&typeof cobalt.userEvents[e.event]=="function")cobalt.userEvents[e.event](e.data,e.callback);else switch(e.event){case"onBackButtonPressed":cobalt.log("sending OK for a native back"),cobalt.sendCallback(e.callback,{value:!0})}},send:function(e){if(e&&!cobalt.debugInBrowser){cobalt.log("sending",e);try{Tizen.requestToNative(JSON.stringify({name:"HPNativeBridge",data:e}))}catch(t){cobalt.log("cant connect to native : "+t)}}},handleCallback:cobalt.defaultBehaviors.handleCallback,navigateToModal:cobalt.defaultBehaviors.navigateToModal,dismissFromModal:cobalt.defaultBehaviors.dismissFromModal,initStorage:cobalt.defaultBehaviors.initStorage},cobalt.adapter=cobalt.tizen_adapter;